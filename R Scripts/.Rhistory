?rbind()
first.matrix <- matrix(1:12, ncol = 4)
first.matrix
str(first.matrix)
dim(first.matrix)
length(first.matrix)
baskets.of.Granny <- c(12, 4, 5, 6, 9, 3)
baskets.of.Geraldine <- c(5, 4, 2, 4, 12, 9)
baskets.team <- rbind(baskets.of.Granny, baskets.of.Geraldine)
baskets.team
byrow(basketes.team)
first.matrix
first.matrix(2:3, )
first.matrix[1:2,2:3]
rownames(baskets.team)
rownames(baskets.team) <- ("Granny", "Geraldine")
rownames(baskets.team) <- c("Granny", "Geraldine")
rownames(baskets.team)
colnames(baskets.team)[3] <- "3rd"
colnames(baskets.team) <- "1st", "2nd", "3rd", "4th", "5th", "6th")
colnames(baskets.team)[3] <- "3rd"
colnames(baskets.team) <- ("1st", "2nd", "3rd", "4th", "5th", "6th")
colnames(baskets.team) <- c("1st", "2nd", "3rd", "4th", "5th", "6th")
colnames(baskets.team)[3] <- "3rd"
colnames(baskets.team)[3] <- "3rd"
baskets.copy <- baskets.team
colnames(baskets.copy) <- NULL
baskets.copy
first.matrix +4
firstmatrix
first.matrix
second.matrix <- first.matrix + 4
second.matrix
firstandsecond.matrix <- first.matrix + Second Matrix
firstandsecond.matrix <- first.matrix + second.matrix
firstandsecond.matrix
rm(firstandsecond.matrix)
first.matrix
first.matrix + 1:3
rowsums(baskets.team)
library(base)
library(stats)
library("boot", lib.loc="~/R/R-3.2.4/library")
library("stats", lib.loc="~/R/R-3.2.4/library")
library("class", lib.loc="~/R/R-3.2.4/library")
rowSums(baskets.team0)
rowSums(baskets.team)
first.matrix[1] *2
first.matrix{1:3, 1] * 2
first.matrix[1:3, 1] * 2
first.matrix[1:3, 1]*2
first.matrix[1:3, 1]
ls()
baskets.df <- as.data.frame(t(baskets.team))
rm(baskets.copy)
baskets.df
STR(BASKETS.DF)
str(baskets.df)
ncol(baskets.df)
length(baskets.df)
nrow(baskets.df)
employee <- c("John Doe", "Peter Gynn", "Jolie Hope")
slaray <- c(21000, 23400, 26800)
salary <- c(21000, 23400, 26800)
rm(slaray)
startdate <- as.Date(c("20120-11-1", "2008-3-25", "2007-3-14"))
startdate <- as.Date(c("2010-11-1", "2008-3-25", "2007-3-14"))
employ.data <- data.frame(employee, salary, startdate)
employ.data <- data.frame(employee, slary, startdate, stringAsFactors = FALSE)
employ.data <- data.frame(employee, salary, startdate, stringAsFactors = FALSE)
str(employ.data)
colnames(employ.data)
employ.data <- data.frame(employee, salary, startdate)
str(emply.data)
str(employ.data)
employ.data <- data.frame(employee, salary, startdate, stringsAsFactors = FALSE)
str(employ.data)
colnames(employ.data)
rownames(employ.data)
rownames(employ.data) <- c("Chef", "BigChef", "BiggerChef")
rownames(employ.data)
str(employ.data)
colnames(employ.data)
employ.data
baskets.df
baskets.df <-rbind(baskets.df, rbind(7, 4))
baskets.df <- rbind(baskets.df, rbind(7, 4))
baskets.df <-rbind(baskets.df, c(7, 4))
baskets.df
baskets.df <- rbind(baskets.df, "7th" = c(7,4))
baskets.df
baskets.df[7,]
str(baskets.df[7, , drop = TRUE])
str(baskets.df)
baskets.df
baskets.df <- baskets.df[-c(7),]
baskets.df
elements <- data.frame()
View(elements)
elements <- edit(elements)
elements
save("elements.xlsx")
saveElements("elements.xlsx")
detach("package:stats", unload=TRUE)
library("stats", lib.loc="~/R/R-3.2.4/library")
detach("package:class", unload=TRUE)
library("utils", lib.loc="~/R/R-3.2.4/library")
install.packages("XLconnect")
library("XLconnect")
install.packages("XLConnect")
library("XLConnect")
install.packages("XLConnectJars")
library("XLConnect")
library("XLConnectJars")
library("XLConnect", lib.loc="~/R/R-3.2.4/library")
library("XLConnectJars", lib.loc="~/R/R-3.2.4/library")
install.packages("nlme")
library("OptionPricing", lib.loc="~/R/R-3.2.4/library")
library("XLConnectJars", lib.loc="~/R/R-3.2.4/library")
library("XLConnect", lib.loc="~/R/R-3.2.4/library")
library("rJava", lib.loc="~/R/R-3.2.4/library")
detach("package:XLConnect", unload=TRUE)
detach("package:XLConnectJars", unload=TRUE)
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="~/R/R-3.2.4/library")
detach("package:rJava", unload=TRUE)
install.packages("factorAnalytics")
install.packages("ellipse")
install.packages("fEcofin")
install.packages("PerformanceAnalytics")
View(baskets.df)
library("boot", lib.loc="~/R/R-3.2.4/library")
install.packages("RQuantLib")
#blackscholes calculation
#time is expressed as a percent of the year
blackscholes <- function(S, X, rf, T, sigma) {
values <- c(2)
d1 <- (log(S/X)+(rf+sigma^2/2)*T)/sigma*sqrt(T)
d2 <- d1 - sigma * sqrt(T)
values[1] <- S*pnorm(d1) - X*exp(-rf*T)*pnorm(d2)
values[2] <- X*exp(-rf*T) * pnorm(-d2) - S*pnorm(-d1)
values
}
#volatility smile
blackscholes(17.89,14,.01,1/52,1.989)
blackscholes(17.89,15,.01,1/52,1.745)
blackscholes(17.89,16,.01,1/52,1.079)
blackscholes(17.89,17,.01,1/52,0.498)
blackscholes(17.89,18,.01,1/52,0.225)
blackscholes(17.89,19,.01,1/52,0.535)
smile<-c(1.989,1.745,1.079,0.498,0.225,0.535)
strike<-c(14,15,16,17,18,19)
flat<-c(1,1,1,1,1,1)
plot(strike,smile,type="l",col=4)
lines(strike,flat)
View(blackscholes)
blackscholes()
S <- c(18)
X <- c(20)
rf <- c(0.35)
T <- c(22/52)
sigma <- c(2)
blackscholes(S, X, rf, T, sigma)
library("RQuantLib", lib.loc="~/R/R-3.2.4/library")
AmericanOption("call", 100, 100, 0.02, 0.03, 0.5, 0.4)
AmericanOption("put", strike=100, volatility=0.4, 100, 0.02, 0.03, 0.5, engine="CrankNicolson")
AmericanOption("put", strike=100, volatility=0.4, 100, 0.02, 0.03, 0.5)
source('~/R/Scripts Hisam and I Worked on/Brownian Motion Walk With Jumps 1.R')
install.packages("quantmod")
lines(f[,5851],type="l",col=2)
install.packages("rugarch")
library(rugarch)
library(RCurl)
library(xts)
URL<-"http://unstarched.net/wp-content/uploads/2013/03/C_2008_1minret.csv"
x<-getURL(URL)
data<-read.csv(textConnection(x))
head(data)
Sys.setenv(TZ = 'GMT')
R_i= xts(data[,2], as.POSIXct(data[,1]))
library(quantmod)
getSymbols('C', from='2000-01-01')
C=adjustOHLC(C,use.Adjusted=TRUE)
R_d=ROC(Cl(C), na.pad=FALSE)
#Correlogram of absolute 1-min returns for citigroup during the sample periods in question:
par(cex.main=.85, col.main='black')
acf(abs(as.numeric(R_i)), lag.max=4000, main ="1-min absolute returns")
#There is a pattern in the acf repeating every 390 periods and showing an increase in volatility around the opening and closing times.
#Estimation of GARCh Model
#Find the unique days in the intraday sample
n = length(unique(format(index(R_i), '%Y-%m-$d')))
#define a daily spec
spec_d=ugarchspec(mean.model=list(armaOrder=c(1,1)), variance.model=list(model='eGARCH', garchOrder=c(2,1)), distribution='nig')
#Use the ugarchroll method to create a rolling forecast for the period in question
roll = ugarchroll(spec_d, data = R_d['/2008-02-29'], forecast.length = n, refit.every= 1, refit.window = 'moving', moving.size = 2000, calculate.VaR = FALSE)
df=as.data.frame(roll)
f_sigma=as.xts(df[,'Sigma', drop=FALSE])
#now estimate the intraday model
spec = ugarchspec(mean.model = list(armaOrder = c(1, 1), include.mean = TRUE), variance.model = list(model = 'mcsGARCH'), distribution = 'nig')
# DailyVar is the required xts object of the forecast daily variance
fit = ugarchfit(spec=spec,data=R_i, DailyVar=(f_sigma^(2)))
View(baskets.df)
View(baskets.df)
rm(all)
ls
rm(baskets.df)
rm(baskets.of.Geraldine)
rm(baskets.team)
rm(baskets.of.Granny)
rm(employee)
rm(flat)
rm(rf)
rm(S)
rm(salary)
rm(smile)
rm(Spec)
rm(spec)
rm(Functions)
rm(blackscholes)
rm(rwalk())
rm(rwalk)
rm(sigma)
rm(startdate)
rm(URL)
rm(X)
rm(T0)
rm(T)
rm(strike)
rm(spec_d)
rm(C)
rm(elements)
rm(employ.data)
rm(R_d)
rm(second.matrix)
rm(first.matrix)
library(quantmod)
getSymbols("UNP", from='2010-01-01')
head(x)
x<-UNP$UNP.Adjusted
EWMA<-function(x,lambda)
{
returns<-Delt(x,type="log")
return_sq<-returns^2
y<-as.matrix(x)
n=(1:nrow(y)-1)
z<-as.matrix(n)
weights<-(1-lambda)*lambda^z
weights<-sort(weights,decreasing=FALSE)
product<-weights*return_sq
product<-as.matrix(product)
product<-na.omit(product)
Variance<-colSums(product)
Volatility<-sqrt(Variance)
final<-cbind(Variance,Volatility)
}
a<-EWMA(x,.94)
a
require("quantmod")
sy<-c("AAPL","YHOO","IBM")
s=sy
s
getSymbols(Symbols = "IBM",
env = parent.frame(),
reload.Symbols = FALSE,
verbose = FALSE,
warnings = TRUE,
src = "yahoo",
symbol.lookup = TRUE,
auto.assign = getOption('getSymbols.auto.assign',TRUE))
####AAPL
mean(AAPL$AAPL.Close)
sd(AAPL$AAPL.Close)
var(AAPL$AAPL.Close)
chartSeries(AAPL)
DeltaA = dailyReturn(AAPL)
mean(Delta)
chartSeries(DeltaA)
####IBM
mean(IBM$IBM.Close)
sd(IBM$IBM.Close)
var(IBM$IBM.Close)
chartSeries(IBM)
DeltaI = dailyReturn(IBM)
mean(DeltaI)
chartSeries(DeltaI)
sd(DeltaI)
z=mean(DeltaI)+sd(DeltaI)
y=mean(DeltaI)-sd(DeltaI)
col
#####SPY
getSymbols(Symbols = "SPY",
env = parent.frame(),
reload.Symbols = FALSE,
verbose = FALSE,
warnings = TRUE,
src = "yahoo",
symbol.lookup = TRUE,
auto.assign = getOption('getSymbols.auto.assign',TRUE))
DeltaS=dailyReturn(SPY)
View(DeltaI)
View(DeltaI)
Sample.GDP.Unemp.R.File <- read.csv("C:/Users/michael/Desktop/Sample GDP Unemp R File.csv")
View(Sample.GDP.Unemp.R.File)
View(Sample.GDP.Unemp.R.File)
GDP.UNEMP.df <- Sample.GDP.Unemp.R.File
View(GDP.UNEMP.df)
GDP.UNEMP.df
install.packages("devtools")
library("devtools", lib.loc="~/R/R-3.2.4/library")
devtools::install_github(jcizel/FredR)
devtools::install_github(jcizel/FredR)
install.packages("fredr")
devtools::install_github("sboysel/fredr")
install.packages("Fredr")
library(fredr)
fredr_key("58009e7b98595c8405fcb15ec6851d64")
install.packages("ggfortify")
install_github("quandl/quandl-r")
library(Quandl)
Quandl.api_key("6Vy6THRmgxaNTkr7tqcy"")
Quandl.api_key("6Vy6THRmgxaNTkr7tqcy")
Quandl.api_key("6Vy6THRmgxaNTkr7tqcy")
Quandl.api_key(6Vy6THRmgxaNTkr7tqcy)
Quandl.api_key("6Vy6THRmgxaNTkr7tqcy")
install.packages(c("nlme", "RcppArmadillo"))
redr_search(search_text = "revolving")
Fredr_search(search_text = "housing")
fredr_search(search_text = "housing")
fredr_series(series_id = "UNRATE", observation_start = "1990-01-01", frequency = "q", units = "chg")
fredr_series(series_id = "UNRATE", observation_start = "1990-01-01", frequency = "m", units = "lvl")
fredr_series(series_id = "UNRATE", observation_start = "1990-01-01", frequency = "m", units = "lin")
unrate <- fredr_series(series_id = "UNRATE", observation_start = "1990-01-01", frequency = "m", units = "lvl")
unrate <- fredr_series(series_id = "UNRATE", observation_start = "1990-01-01", frequency = "m", units = "lin")
autoplot.zoo(unrate)
write.csv(unrate.csv)
write.csv(unrate)
getwd()
setwd("C:/Users/michael/Documents/R")
getwd()
unrate.df <- unrate
rm(unrate.df)
fredr_series(series_id = "NMFCI",
observation_start = "1990-01-01",
frequency = "m",
units = "idx")
fredr_series(series_id = "NMFCI",
+              observation_start = "1990-01-01",
+              frequency = "m",
+              units = "lin")
fredr_series(series_id = "NMFCI",
+              observation_start = "1990-01-01",
+              frequency = "m",
+              units = "cap")
fredr_series(series_id = "NMFCI",
+              observation_start = "1990-01-01",
+              frequency = "m",
+              units = "cca")
fredr_series(series_id = "NMFCI",
+              observation_start = "1990-01-01",
+              frequency = "M",
+              units = "lin")
fredr_series(series_id = "NMFCI",
+              observation_start = "2008-01-01",
+              frequency = "m",
+              units = "lin")
fredr_series(series_id = "NMFCI", observation_start = "2008-01-01", frequency = "m", units = "lin")
autoplot(fredr_series(series_id = "NMFCI", observation_start = "2008-01-01", frequency = "m", units = "lin"))
autoplot()
library("fredr", lib.loc="~/R/R-3.2.4/library")
library("dplyr", lib.loc="~/R/R-3.2.4/library")
library("ggfortify", lib.loc="~/R/R-3.2.4/library")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/R/R-3.2.4/library")
autoplot(fredr_series(series_id = "NMFCI", observation_start = "2008-01-01", frequency = "m", units = "lin"))
ISMnmfg <- fredr_series(series_id = "NMFCI", observation_start = "2008-01-01", frequency = "m", units = "lin")
ISMmfg <- fredr_series(series_id = "NAPM", observation_start = "2008-01-01", frequency = "m", units = "lin")
cor(ISMnmfg, ISMmfg)
autoplot(fredr_series(series_id = "NAPM", observation_start = "2008-01-01", frequency = "m", units = "lin"))
quit()
