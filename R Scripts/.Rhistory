GLBLAGG <- (BRT[,17])
EMDEBT <- (BRT[,18])
library(PortfolioAnalytics)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(plotly)
library(ROI)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
BRT_ts <- ts(BRT[,-1], start=c(2002, 12), end=c(2018, 6), frequency=12)
GSCI <- (BRT_ts[,1])
USHY <- (BRT_ts[,2])
USAGG <- (BRT_ts[,3])
USLC <- (BRT_ts[,4])
USMC <- (BRT_ts[,5])
USSC <- (BRT_ts[,6])
EAFE <- (BRT_ts[,7])
EM <- (BRT_ts[,8])
USRE <- (BRT_ts[,9])
CASH <- (BRT_ts[,10])
INTLFI <- (BRT_ts[,11])
GLBLRE <- (BRT_ts[,12])
INTLSC <- (BRT_ts[,13])
INFRA <- (BRT_ts[,14])
BKLOANS <- (BRT_ts[,15])
GLBLAGG <- (BRT_ts[,16])
EMDEBT <- (BRT_ts[,17])
meanReturns <- colMeans(BRT_ts)
covMat <- cov(BRT_ts)
port <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","GLBLAGG","EMDEBT"))
port25 <- add.constraint(port, type = "box",
min=c(0.00, 0.00, 0.60, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,   0.00,   0.00,   0.00,   0.00,    0.00,   0.00),
max=c(0.15, 0.30, 0.80, 0.30, 0.20, 0.20, 0.20, 0.20, 0.30, 0.10, 0.40,   0.20,   0.15,   0.20,   0.20,    0.50,   0.30))
structure(port25)
port25 <- add.objective(portfolio=port25, type='risk',name='StdDev')
port25 <- add.objective(portfolio=port25, type='return',name='mean')
opt_port25 <- optimize.portfolio(R=BRT_ts, portfolio=port25,
optimize_method="random",
search_size=5000,
trace=TRUE, traceDE=5)
summary(opt_port25)
extractStats(opt_port25)
print(opt_port25)
port25 <- add.constraint(port, type = "box",
min=c(0.00, 0.00, 0.30, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,   0.00,   0.00,   0.00,   0.00,    0.00,   0.00),
max=c(0.15, 0.30, 0.80, 0.30, 0.20, 0.20, 0.20, 0.20, 0.30, 0.10, 0.40,   0.20,   0.15,   0.20,   0.20,    0.50,   0.30))
port25 <- add.objective(portfolio=port25, type='risk',name='StdDev')
port25 <- add.objective(portfolio=port25, type='return',name='mean')
opt_port25 <- optimize.portfolio(R=BRT_ts, portfolio=port25,
optimize_method="random",
search_size=5000,
trace=TRUE, traceDE=5)
extractStats(opt_port25)
print(opt_port25)
port25 <- add.constraint(port, type = "box",
min=c(0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,   0.00,   0.00,   0.00,   0.00,    0.00,   0.00),
max=c(0.15, 0.30, 0.00, 0.30, 0.20, 0.20, 0.20, 0.20, 0.30, 0.10, 0.40,   0.20,   0.15,   0.20,   0.20,    0.80,   0.30))
port25 <- add.objective(portfolio=port25, type='risk',name='StdDev')
port25 <- add.objective(portfolio=port25, type='return',name='mean')
opt_port25 <- optimize.portfolio(R=BRT_ts, portfolio=port25,
optimize_method="random",
search_size=5000,
trace=TRUE, traceDE=5)
print(opt_port25)
setwd("~/GitHub/Finance_R_Files/R Scripts")
getwd()library(readxl)
ConsBenchRetsEQLDates <- read_excel("C:/Users/Michael/Downloads/AnnBenchRets.xlsx",
col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
BRT <- ConsBenchRetsEQLDates
View(BRT)
print(BRT[1,])
GSCI <- (BRT[,2])
USHY <- (BRT[,3])
USAGG <- (BRT[,4])
USLC <- (BRT[,5])
USMC <- (BRT[,6])
USSC <- (BRT[,7])
EAFE <- (BRT[,8])
EM <- (BRT[,9])
USRE <- (BRT[,10])
CASH <- (BRT[,11])
INTLFI <- (BRT[,12])
GLBLRE <- (BRT[,13])
INTLSC <- (BRT[,14])
INFRA <- (BRT[,15])
BKLOANS <- (BRT[,16])
EMDEBT <- (BRT[,17])
library(PortfolioAnalytics)
library(quantmod)
library(PerformanceAnalytics)
library(zoo)
library(plotly)
library(ROI)
library(ROI.plugin.quadprog)
library(ROI.plugin.glpk)
BRT_ts <- ts(BRT[,-1], start=c(2002, 12), end=c(2018, 6), frequency=12)
GSCI <- (BRT_ts[,1])
USHY <- (BRT_ts[,2])
USAGG <- (BRT_ts[,3])
USLC <- (BRT_ts[,4])
USMC <- (BRT_ts[,5])
USSC <- (BRT_ts[,6])
EAFE <- (BRT_ts[,7])
EM <- (BRT_ts[,8])
USRE <- (BRT_ts[,9])
CASH <- (BRT_ts[,10])
INTLFI <- (BRT_ts[,11])
GLBLRE <- (BRT_ts[,12])
INTLSC <- (BRT_ts[,13])
INFRA <- (BRT_ts[,14])
BKLOANS <- (BRT_ts[,15])
EMDEBT <- (BRT_ts[,16])
meanReturns <- colMeans(BRT_ts)
port <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","EMDEBT"))
port25 <- add.constraint(port, type = "box",
min=c(0.00, 0.00, 0.50, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,  0.00,   0.00,   0.00,   0.00,    0.00),
max=c(0.15, 0.30, 0.80, 0.30, 0.20, 0.20, 0.20, 0.20, 0.30, 0.10, 0.40,  0.20,   0.15,   0.20,   0.20,    0.30))
port25 <- add.objective(portfolio=port25, type='risk',name='StdDev')
port25 <- add.objective(portfolio=port25, type='return',name='mean')
opt_port25 <- optimize.portfolio(R=BRT_ts, portfolio=port25,
optimize_method="random",
search_size=5000,
trace=TRUE, traceDE=5)
summary(opt_port25)
extractStats(opt_port25)
print(opt_port25)
GSAM <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","EMDEBT"))
GSAM <- add.objective(portfolio=GSAM, type='risk',name='StdDev')
GSAM <- add.objective(portfolio=GSAM, type='return',name='mean')
GSAM100_0 <- add.constraint(GSAM, type = "box",
min=c(0, 0.087, 0, 0.141, 0.055, 0.098, 0.135, 0.113, 0.026, 0, 0, 0.022, 0.081, 0.08, 0.044, 0.116),
max=c(0, 0.087, 0, 0.141, 0.055, 0.098, 0.135, 0.113, 0.026, 0, 0, 0.022, 0.081, 0.08, 0.044, 0.116))
print(GSAM100_0)
GSAM100_0 <- optimize.portfolio(R=BRT_ts, portfolio=GSAM100_0,
optimize_method="random",
search_size=500,
trace=TRUE, traceDE=5)
portGSAM100_0 <- optimize.portfolio(R=BRT_ts, portfolio=GSAM100_0,
optimize_method="random",
search_size=500,
trace=TRUE, traceDE=5)
weights <- read_excel("C:/Users/Micha/Downloads/GSAMBaseWeights.xlsx")
weights <- read_excel("C:/Users/Michael/Downloads/GSAMBaseWeights.xlsx")
str(weights)
print(weights[1,])
weights <- as.numeric(weights)
wMatrix <- as.matrix(weights[,-1])
str(wMatrix)
print(wMatrix)
w100_0 <- wMatrix[1,]
w90_10 <- wMatrix[2,]
w80_20 <- wMatrix[3,]
w70_30 <- wMatrix[4,]
w60_40 <- wMatrix[5,]
w50_50 <- wMatrix[6,]
w40_60 <- wMatrix[7,]
w30_70 <- wMatrix[8,]
print(w100_0)
weights <- read_excel("C:/Users/Michael/Downloads/GSAMBaseWeights.xlsx")
str(weights)
weights <- as.numeric(weights)
wMatrix <- as.matrix(weights[,-1])
str(wMatrix)
w100_0 <- wMatrix[1,]
w90_10 <- wMatrix[2,]
w80_20 <- wMatrix[3,]
w70_30 <- wMatrix[4,]
w60_40 <- wMatrix[5,]
w50_50 <- wMatrix[6,]
w40_60 <- wMatrix[7,]
w30_70 <- wMatrix[8,]
print(w100_00)
print(w100_)
print(w100_0)
GSAM100_0 <- Return.portfolio(BRT_ts, weights = w100_0, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM90_10 <- Return.portfolio(BRT_ts, weights = w90_10, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM80_20 <- Return.portfolio(BRT_ts, weights = w80_20, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM70_30 <- Return.portfolio(BRT_ts, weights = w70_30, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM60_40 <- Return.portfolio(BRT_ts, weights = w60_40, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM50_50 <- Return.portfolio(BRT_ts, weights = w50_50, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM40_60 <- Return.portfolio(BRT_ts, weights = w40_60, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
GSAM30_70 <- Return.portfolio(BRT_ts, weights = w30_70, wealth.index = FALSE, contribution = FALSE, geometric = TRUE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
summary(GSAM100_0)
extractStats(GSAM100_0)
print(GSAM100_0)
print(w100_0)
GSAMtest <- w100_0*BRT_ts
print(GSAMtest)
GSAMtest2 <- colSums(GSAMtest[,1:16])
print(GSAMtest2)
print(GSAMtest[1,])
print(GSAMtest[,1])
GSAMtest2 <- colSums(GSAMtest[1:16,])
print(GSAMtest2)
GSAMtest2 <- rowSums(GSAMtest[1:16,])
print(GSAMtest2)
str(GSAMtest)
GSAMtest2 <- c(GSAMtest[1:16,])
print(GSAMtest2)
str(GSAMtest2)
GSAMtest2 <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","EMDEBT"))
print(GSAMtest2)
str(GSAMtest2)
plot(GSAM100_0)
GSAMtest2 <- a(c(GSAMtest[1:16,]))
GSAMtest2 <- apepnd(c(GSAMtest[1:16,]))
GSAMtest2 <- append(c(GSAMtest[1:16,]))
GSAM100 <- ts(GSAMtest2, start=c(2002, 12), end=c(2018, 6), frequency=12)
print(GSAM100)
print(GSAMtest2)
GSAMtest2 <- c(GSAMtest[1:16,])
print(GSAMtest2)
GSAM100 <- ts(GSAMtest2, start=c(2002, 12), end=c(2018, 6), frequency=12)
print(GSAM100)
print(BRT_ts[1])
print(BRT_ts)
GSAM100_0 <- Return.portfolio(BRT_ts, weights = w100_0, wealth.index = FALSE, contribution = FALSE, geometric = FALSE,
rebalance_on = c(NA), value = 1, verbose = FALSE)
print(GSAM100_0)
data(edhec)
printedhec
print(edhec)
Return.portfolio(edhec["1997",1:5], rebalance_on="quarters") # returns time series
Return.portfolio(edhec["1997",1:5], rebalance_on="quarters", verbose=TRUE) # returns list
# with a weights object
data(weights) # rebalance at the beginning of the year to various weights through time
chart.StackedBar(weights)
x <- Return.portfolio(edhec["2000::",1:11], weights=weights,verbose=TRUE)
chart.CumReturns(x$returns)
GSAM100_0 <- Return.portfolio(edhec["1997",1:5], rebalance_on="NA") # returns time series
print(GSAM100_0)
GSAM100_0 <- Return.portfolio(BRT_ts, weights=w100_0,verbose=TRUE)
print(GSAM100_0)
GSAM100_0 <- Return.portfolio(BRT_ts, weights=w100_0,verbose=FALSE)
print(GSAM100_0)
print(edhec["1997",1:5])
view(BRT_ts)
View(BRT_ts)
head(BRT_ts)
rm(GSAM100)
View(GSAM100_0)
View(weights)
rm(weights)
rm(x)
rm(edhec)
GSAM100_0 <- Return.portfolio(BRT_ts["2002:"], weights = w100_0,verbose=FALSE)
GSAM100_0 <- Return.portfolio(BRT_ts["Dec 2002 :"], weights = w100_0,verbose=FALSE)
rm(GSAMtest)
rm(GSAMtest2)
library(readxl)
GSAMRets <- read_excel("C:/Users/Michael/Downloads/GSAMAnnBenchRets.xlsx",
col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
View(GSAMRets)
View(GSAMRets[1,])
GSAM_ts <- ts(GSAMRets[,-1], start=c(2002, 12), end=c(2018, 6), frequency=12)
GSAM100_0 <- Return.portfolio(GSAM_ts, weights = w100_0,geometric = FALSE,verbose=FALSE)
GSAM90_10 <- Return.portfolio(GSAM_ts, weights = w90_10,geometric = FALSE,verbose=FALSE)
GSAM80_20 <- Return.portfolio(GSAM_ts, weights = w80_20,geometric = FALSE,verbose=FALSE)
GSAM70_30 <- Return.portfolio(GSAM_ts, weights = w70_30,geometric = FALSE,verbose=FALSE)
GSAM60_40 <- Return.portfolio(GSAM_ts, weights = w60_40,geometric = FALSE,verbose=FALSE)
GSAM50_50 <- Return.portfolio(GSAM_ts, weights = w50_50,geometric = FALSE,verbose=FALSE)
GSAM40_60 <- Return.portfolio(GSAM_ts, weights = w40_60,geometric = FALSE,verbose=FALSE)
GSAM30_70 <- Return.portfolio(GSAM_ts, weights = w30_70,geometric = FALSE,verbose=FALSE)
print(GSAM100_0)
summary(GSAM100_0)
extractStats(GSAM100_0)
GSAM100test <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","EMDEBT"),
category_labels = NULL, weight_seq = w100_0,
message = FALSE)
print(GSAM100test)
rm(GSAM100test)
meanGSAM100_0 <- mean.geometric(GSAM100_0)
head(GSAM100_0)
head(GSAM100_0[1,])
head(GSAM100_0[,1])
meanGSAM100_0 <- mean(GSAM100_0)
meanGSAM100_0 <- mean(GSAM100_0)
meanGSAM90_10 <- mean(GSAM90_10)
meanGSAM80_20 <- mean(GSAM80_20)
meanGSAM70_30 <- mean(GSAM70_30)
meanGSAM60_40 <- mean(GSAM60_40)
meanGSAM50_50 <- mean(GSAM50_50)
meanGSAM40_60 <- mean(GSAM40_60)
meanGSAM30_70 <- mean(GSAM30_70)
volGSAM100_0 <- StdDev(GSAM100_0)
volGSAM90_10 <- StdDev(GSAM90_10)
volGSAM80_20 <- StdDev(GSAM80_20)
volGSAM70_30 <- StdDev(GSAM70_30)
volGSAM60_40 <- StdDev(GSAM60_40)
volGSAM50_50 <- StdDev(GSAM50_50)
volGSAM40_60 <- StdDev(GSAM40_60)
volGSAM30_70 <- StdDev(GSAM30_70)
print(volGSAM100_0)
print(meanGSAM100_0)
print(meanGSAM90_10)
print(meanGSAM80_20)
print(meanGSAM70_30)
print(meanGSAM60_40)
print(meanGSAM50_50)
print(meanGSAM40_60)
print(meanGSAM30_70)
print(volGSAM100_0)
print(volGSAM90_10)
print(volGSAM80_20)
print(volGSAM70_30)
print(volGSAM60_40)
print(volGSAM50_50)
print(volGSAM40_60)
print(volGSAM30_70)
NABaseConstraints <- read_excel("C:/Users/Michael/Downloads/NABaseConstraints.xlsx",
col_types = c("date", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
warnings()
NABaseConstraints <- read_excel("C:/Users/Michael/Downloads/NABaseConstraints.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
str(NABaseConstraints)
BaseWeights <- as.numeric(NABaseConstraints)
wBase <- as.matrix(BaseWeights[,-1])
wBase <- as.matrix(NABaseConstraints[,-1])
w100_0max <- wBase[1,]
w100_0max <- wBase[2,]
print(w100_0max)
w85max <- wBase[1,]
w85min <- wBase[2,]
rm(w100_0max)
print(w85max)
print(w85min)
Base25 <- add.constraint(port, type = "box", min=w85min, max=w85max)
print(Base25)
structure(Base25)
port25 <- add.constraint(port, type = "box",
min=c(0.00, 0.00, 0.50, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,  0.00,   0.00,   0.00,   0.00,    0.00),
max=c(0.15, 0.30, 0.80, 0.30, 0.20, 0.20, 0.20, 0.20, 0.30, 0.10, 0.40,  0.20,   0.15,   0.20,   0.20,    0.30))
print(port25)
summary(Base25)
opt_Base25 <- optimize.portfolio(R=BRT_ts, portfolio=Base25,
optimize_method="random",
search_size=50000,
trace=TRUE, traceDE=5)
summary(opt_Base25)
extractStats(opt_Base25)
Base25 <- add.objective(portfolio=Base25, type='return',name='mean')
opt_Base25 <- optimize.portfolio(R=BRT_ts, portfolio=Base25,
optimize_method="random",
search_size=5000,
trace=TRUE, traceDE=5)
summary(opt_Base25)
NABaseConstraints <- read_excel("C:/Users/Michael/Downloads/NABaseConstraints.xlsx",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric"))
str(NABaseConstraints)
BaseWeights <- as.numeric(NABaseConstraints)
opt_Base85 <- optimize.portfolio(R=BRT_ts, portfolio=Base85,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
BasePort <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","EMDEBT"))
BasePort <- add.objective(BasePort, type='return',name='mean')
n <- 5000 #Search Size in optimize.portfolio
Base85 <- add.constraint(BasePort, type = "box", min=w85min, max=w85max)
opt_Base85 <- optimize.portfolio(R=BRT_ts, portfolio=Base85,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
print(opt_Base25)
BasePort <- portfolio.spec(assets = c("GSCI", "USHY", "USAGG", "USLC", "USMC", "USSC",
"EAFE", "EM", "USRE", "CASH", "INTLFI","GLBLRE",
"INTLSC","INFRA","BKLOANS","EMDEBT"))
BasePort <- add.objective(BasePort, type='return',name='mean')
n <- 5000 #Search Size in optimize.portfolio
Base85 <- add.constraint(BasePort, type = "box", min=w85min, max=w85max)
opt_Base85 <- optimize.portfolio(R=BRT_ts, portfolio=Base85,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base75 <- add.constraint(BasePort, type = "box", min=w75min, max=w75max)
opt_Base75 <- optimize.portfolio(R=BRT_ts, portfolio=Base75,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base65 <- add.constraint(BasePort, type = "box", min=w65min, max=w65max)
opt_Base65 <- optimize.portfolio(R=BRT_ts, portfolio=Base65,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base55 <- add.constraint(BasePort, type = "box", min=w55min, max=w55max)
opt_Base55 <- optimize.portfolio(R=BRT_ts, portfolio=Base55,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base45 <- add.constraint(BasePort, type = "box", min=w45min, max=w45max)
opt_Base45 <- optimize.portfolio(R=BRT_ts, portfolio=Base45,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base35 <- add.constraint(BasePort, type = "box", min=w35min, max=w35max)
opt_Base35 <- optimize.portfolio(R=BRT_ts, portfolio=Base35,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base25 <- add.constraint(BasePort, type = "box", min=w25min, max=w25max)
opt_Base25 <- optimize.portfolio(R=BRT_ts, portfolio=Base25,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
summary(opt_Base85)
summary(opt_Base75)
summary(opt_Base65)
summary(opt_Base55)
summary(opt_Base55)
summary(opt_Base45)
summary(opt_Base35)
summary(opt_Base25)
w85max <- wBase[1,]
w85min <- wBase[2,]
w75max <- wBase[3,]
w75min <- wBase[4,]
w65max <- wBase[5,]
w65min <- wBase[6,]
w55max <- wBase[7,]
w55min <- wBase[8,]
w45max <- wBase[9,]
w45min <- wBase[10,]
w35max <- wBase[11,]
w35min <- wBase[12,]
w25max <- wBase[13,]
w25min <- wBase[14,]
Base85 <- add.constraint(BasePort, type = "box", min=w85min, max=w85max)
opt_Base85 <- optimize.portfolio(R=BRT_ts, portfolio=Base85,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base75 <- add.constraint(BasePort, type = "box", min=w75min, max=w75max)
opt_Base75 <- optimize.portfolio(R=BRT_ts, portfolio=Base75,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base65 <- add.constraint(BasePort, type = "box", min=w65min, max=w65max)
opt_Base65 <- optimize.portfolio(R=BRT_ts, portfolio=Base65,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base55 <- add.constraint(BasePort, type = "box", min=w55min, max=w55max)
opt_Base55 <- optimize.portfolio(R=BRT_ts, portfolio=Base55,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base45 <- add.constraint(BasePort, type = "box", min=w45min, max=w45max)
opt_Base45 <- optimize.portfolio(R=BRT_ts, portfolio=Base45,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base35 <- add.constraint(BasePort, type = "box", min=w35min, max=w35max)
opt_Base35 <- optimize.portfolio(R=BRT_ts, portfolio=Base35,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
Base25 <- add.constraint(BasePort, type = "box", min=w25min, max=w25max)
opt_Base25 <- optimize.portfolio(R=BRT_ts, portfolio=Base25,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
View(volGSAM60_40)
print(opt_Base25)
opt_Base25 <- optimize.portfolio(R=BRT_ts, portfolio=Base25,
optimize_method="random",
search_size= n,
trace=TRUE, traceDE=5)
